name: Sample Service Validator Config Distribution Builder
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build-dist:
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v2

      - name: Generate useful environment variables; this action is in a list recommended by GitHub.
        uses: FranzDiebold/github-env-vars-action@v2

      - name: Get current date for usage in subsequent steps as env.BUILD_DATE
        run: echo BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') >> $GITHUB_ENV

      - name: Print environment variables; helps diagnosing issues with a workflow
        run: |
          echo "CI_REPOSITORY_SLUG=$CI_REPOSITORY_SLUG"
          echo "CI_REPOSITORY_OWNER=$CI_REPOSITORY_OWNER"
          echo "CI_REPOSITORY_OWNER_SLUG=$CI_REPOSITORY_OWNER_SLUG"
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"
          echo "CI_REPOSITORY_NAME_SLUG=$CI_REPOSITORY_NAME_SLUG"
          echo "CI_REPOSITORY=$CI_REPOSITORY"
          echo "CI_REF_SLUG=$CI_REF_SLUG"
          echo "CI_ACTION_REF_NAME=$CI_ACTION_REF_NAME"
          echo "CI_ACTION_REF_NAME_SLUG=$CI_ACTION_REF_NAME_SLUG"
          echo "CI_REF_NAME=$CI_REF_NAME"
          echo "CI_REF_NAME_SLUG=$CI_REF_NAME_SLUG"
          echo "CI_REF=$CI_REF"
          echo "CI_HEAD_REF_SLUG=$CI_HEAD_REF_SLUG"
          echo "CI_HEAD_REF=$CI_HEAD_REF"
          echo "CI_BASE_REF_SLUG=$CI_BASE_REF_SLUG"
          echo "CI_BASE_REF=$CI_BASE_REF"
          echo "CI_SHA_SHORT=$CI_SHA_SHORT"
          echo "CI_SHA=$CI_SHA"
          echo "CI_ACTOR=$CI_ACTOR"
          echo "CI_EVENT_NAME=$CI_EVENT_NAME"
          echo "CI_RUN_ID=$CI_RUN_ID"
          echo "CI_RUN_NUMBER=$CI_RUN_NUMBER"
          echo "CI_WORKFLOW=$CI_WORKFLOW"
          echo "CI_ACTION=$CI_ACTION"
          echo "BUILD_DATE=${{ env.BUILD_DATE }}"

      #
      # We build a lightweight container with this entire repo inside, and python 3 and
      # dependencies available for running scripts.
      #
      - name: build container
        run: docker build -t cli .

      #
      # Validate the source spec files.
      #
      - name: run tests in container
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/validate_source_specs.sh

      #
      # Generate files for the distribution.
      #
      - name: build UI exports in "dist" directory
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/ui_export.sh 
      - name: build validators config in "dist" directory
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/merge_validators.sh
      - name: build validators documentation table in "dist" directory
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/create_fields_table.sh
      - name: build templates in "dist" directory
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/build_templates.sh

      #
      # Validate the generated files
      #
      - name: validate the generated validator files
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/validate_generated_validators.sh
      - name: validate the generated ui spec files
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/validate_ui_export.sh

      #
      # Add a README.md
      #
      - name: add a "readme" file to the dist directory
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/copy_readme.sh

      #
      # Add a manifest file
      #
      - name: add a "manifest" file to the dist directory
        run: docker run -v `pwd`/dist:/kb/module/dist cli scripts/automation/create_manifest.sh

      #
      # Create friendly branch names.
      # Cases we handle:
      # - push to "master" - name "dist-master"
      # - any activity in PR against "master" - name "dist-pr_#""
      # - release created - name "release", tag "dist-v#.#.#""
      #
      - name: Create friendly branch name for push to master
        if: github.event_name == 'push'
        run: echo DIST_BRANCH_NAME=dist-master >> $GITHUB_ENV
 
      - name: Create friendly branch name for pull request
        if: github.event_name == 'pull_request'
        run: echo DIST_BRANCH_NAME=dist-pull_request_${{github.event.pull_request.number}} >> $GITHUB_ENV
 
      - name: Create friendly branch name for a release against master
        if: github.event_name == 'release'
        run: |
          echo DIST_BRANCH_NAME=dist-release >> $GITHUB_ENV
          echo DIST_TAG_NAME=dist-release_${{ github.event.release.tag_name }} >> $GITHUB_ENV
 
      #
      # Publish the /dist directory to a dist-* branch
      #
      - name: create a branch, depending on the workflow action
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: ${{ env.DIST_BRANCH_NAME }}
          TAG: ${{ env.DIST_TAG_NAME }}
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.KBASE_BOT_TOKEN }}
